/*
 * This file defines the CSS that is specific/custom for this project.
 *
 * Please note that this file's styling must be additive. Any overrides/
 * customizations of the base Bootstrap styling must go in 
 * bootstrap-customizations.less.
 */


/*
 * Template Styling (applies to all/most pages)
 */

// Make the page-specific content a Bootstrap .container.
// (This might be too coarse-grained, but it's a start for now.)
#page-content {
	.container;
}

// Style the page footer.
footer#page-footer {
	border-top: 1px solid @gray-lighter;
	margin-top: 5.0em;
	padding-top: 1.0em;
	padding-bottom: 1.0em;
	
	font-size: 0.9em;
	color: @text-muted;
	
	a {
		color: @text-muted;
	}
}

// Not every table should be 100% wide.
.table-nonfluid {
	width: auto;
}


/*
 * Home Page
 */

// Make the #create-game link a button.
a#create-game {
	.btn;
	.btn-primary;
}

p#player-games-empty {
	color: @text-muted;
}

// Spruce up the #player-games table.
table#player-games {
	.table;
	.table-striped;
	.table-hover;
	.table-nonfluid;
	
	a.game-view {
		.btn;
		.btn-primary;
		.btn-xs;
	}
}


/*
 * Replace radio buttons with Font Awesome icons, instead.
 */
div.radio label {
	position: relative;
	display: inline-block;
	padding-left: 1.5rem;
	cursor: pointer;
	
	input {
		position: absolute;
		opacity: 0;
		z-index: -1; /* Put the input behind the label so it doesn't overlay text */
	}
	
	.control-indicator {
		.fa-icon;
		padding-right: 0.25em;
	}
	
	input:checked ~ .control-indicator:before, 
	input:active ~ .control-indicator:before {
		position: absolute;
		content: "\f192";
	}
}


/*
 * Game Page
 */

// The "Game created ..." <p/> acts as a subtitle of sorts.
p#created {
	font-size: 0.75em;
	color: @text-muted;
}

// Layout and style the player controls.
#players {
	.make-row();
	
	div.col {
		.make-xs-column(12);
		.make-md-column(6);
	
		#player-first, #player-second {
			.panel;
			.panel-default;
			margin-bottom: 10px;
	
			p.player-name {
				text-align: center;
				font-size: 1.5em;
				
				.glyphicon-edit {
					font-size: 0.75em;
					color: @text-muted;
					cursor: pointer;
				}
			}
			
			p.player-score-value {
				text-align: center;
				font-size: 3.0em;
				font-weight: bold;
				margin-bottom: 0;
		
				.won {
					.text-success;
				}
				.lost {
					.text-danger;
				}
			}
			
			p.player-score-suffix {
				margin-top: 0;
				text-align: center;
				font-size: 0.75em;
				color: @text-muted;
			}
		}
		
		#player-first.won, #player-second.won {
			border-color: @brand-success;
			background-color: @state-success-bg;
		}
		
		#player-first.lost, #player-second.lost {
			border-color: @brand-danger;
			background-color: @state-danger-bg;
		}
	}
}

.player-throws {
	h2 {
		.make-row();
		
		span.col {
			.make-xs-column(12);
		}
	}
	
	div.row {
		.make-row();

		div.col {
			.make-xs-column(4);
			.make-md-column(2);

			a.throw-rock, a.throw-paper, a.throw-scissors {
				.btn;
				.btn-primary;
				.btn-lg;
				width: 100%;
			}
		}
	}
}

// Layout and style the game setup controls.
// (These are only visible before the game starts.)
#game-controls {

	form#opponent-selection {
		.make-row();
		
		div.col {
			.make-xs-column(12);
			.make-md-column(6);
		}
		
		// Collapse the margin between the label and the first radio button.
		label:first-child + div.radio {
			margin-top: 0;
		}
		
		div#ai-id-group {
			.form-group;
		}
		
		button[type='submit'] {
			.btn;
			.btn-lg;
			.btn-primary;
		}
		
		input, select {
			.form-control;
		}
		
		select {
			.input-lg;
		}
		
		div.radio {
			font-size: @font-size-large;
			line-height: @line-height-large;
		}
	}

	#join-controls div.row {
		.make-row();
		
		div.col {
			.make-xs-column(8);
			.make-md-column(4);
	
			#join-game {
				.btn;
				.btn-primary;
				.btn-lg;
				width: 100%;
			}
		}
	}
	
	#max-round-controls {
		margin-bottom: 10px;
		
		#max-rounds-label-row > .col {
			.make-xs-column(12);
		}
		
		#max-rounds-controls-outer > .col {
			.make-xs-column(8);
			.make-md-column(4);
		}
		
		#max-rounds-controls-inner > .col {
			// We use nested rows+cols to ensure these controls are spaced 
			// evenly, but are only as wide total as two of the throw buttons.
			.make-xs-column(4);
		}
	
		#max-rounds-down, #max-rounds-up, .max-rounds-value {
			.btn;
			.btn-lg;
			width: 100%;
		}
		
		#max-rounds-down, #max-rounds-up {
			.btn-primary;
		}

		.max-rounds-value {
			// This isn't actually a button at all; we're just cheating 
			// because styling it this way looks good.
			.btn-default;
			.disabled;
		}
	}
}

// Layout and style the game history controls.
#round-history {
	table#rounds {
		.table;
		.table-striped;
		.table-hover;
		.table-nonfluid;

		.won {
			.text-success;
		}
		.lost {
			.text-danger;
		}
		
		tr#result-row {
			font-weight: bold;
		}
	}
}


/*
 * Login Page
 */

form#login {
	input[type=text], input[type=password] {
		.form-control;
	}
	
	button[type=submit] {
		.btn;
		.btn-success;
	}
}


/*
 * Register Page
 */

form#register {
	input[type=text], input[type=password] {
		.form-control;
	}
	
	button[type=submit] {
		.btn;
		.btn-success;
	}
}


/*
 * Account Page
 */

form#account-properties {
	p#inputCreationTimestamp {
		.form-control-static;
	}
	
	input[type=text] {
		.form-control;
	}
	
	button[type=submit] {
		.btn;
		.btn-success;
	}
	
	#account-created-date {
		font-size: 0.75em;
		color: @text-muted;
	}
}
